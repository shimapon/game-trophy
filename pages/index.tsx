import type { NextPage } from "next";
import Head from "next/head";
import { GetStaticProps } from "next";

// ページコンポーネントに渡されるデータ
type Props = {
  channel_data: any;
};

// この関数がビルド時に呼び出され、戻り値の props の値がページコンポーネントに渡される
export const getStaticProps: GetStaticProps<Props> = async (context) => {
  // const channelID = "UCx1nAvtVDIsaGmCMSe8ofsQ";
  const channelID = "UCXBgKqFxSjKADEuMLkc1Bpg";

  const res = await fetch(
    "https://www.googleapis.com/youtube/v3/channels?part=" +
      "snippet" +
      "&id=" +
      channelID +
      "&key=" +
      process.env.YOUTUBE_API_KEY
  );
  const data = await res.json();

  const res2 = await fetch(
    "https://www.googleapis.com/youtube/v3/channels?part=" +
      "brandingSettings" +
      "&id=" +
      channelID +
      "&key=" +
      process.env.YOUTUBE_API_KEY
  );
  const data2 = await res2.json();

  const res3 = await fetch(
    "https://www.googleapis.com/youtube/v3/channels?part=" +
      "statistics" +
      "&id=" +
      channelID +
      "&key=" +
      process.env.YOUTUBE_API_KEY
  );
  const data3 = await res3.json();

  if (!data || !data2 || !data3) {
    return {
      notFound: true,
    };
  }
  const channel_data = [data, data2, data3];

  return {
    props: { channel_data }, // will be passed to the page component as props
  };
};

const Index: React.FC<Props> = ({ channel_data }) => {
  console.log(channel_data);

  return (
    <div>
      <Head>
        <title>Gama Trophy</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="m-2">
        <p className="text-4xl my-2">Snippet</p>

        {channel_data[0].items &&
          channel_data[0].items.map((d: any, index: number) => {
            return (
              <div key={d.id}>
                <ul>
                  <li>Channel ID：{d.id}</li>
                  <li>Title：{d.snippet.title}</li>
                  <li>cunstomUrl：{d.snippet.customUrl}</li>
                  <li>Description：{d.snippet.description}</li>
                  <li>
                    Thumbnails：
                    <img
                      src={d.snippet.thumbnails.default.url}
                      alt={d.snippet.title}
                    />
                  </li>
                </ul>
              </div>
            );
          })}

        <p className="text-4xl my-2">brandingSettings</p>

        {channel_data[1].items && (
          <div>
            bannerExternalUrl：
            <img
              src={
                channel_data[1].items[0].brandingSettings.image
                  .bannerExternalUrl
              }
              alt={
                channel_data[1].items[0].brandingSettings.channel.title +
                "Banner"
              }
            />
          </div>
        )}

        <p className="text-4xl my-2">statistics</p>

        {channel_data[2].items && (
          <ul>
            <li>
              再生回数：
              {channel_data[2].items[0].statistics.viewCount}
            </li>
            <li>
              コメント数：{channel_data[2].items[0].statistics.commentCount}
            </li>
            <li>
              登録者数：
              {channel_data[2].items[0].statistics.subscriberCount}
            </li>
            <li>
              アップロードされた動画の数：
              {channel_data[2].items[0].statistics.videoCount}
            </li>
            <li>
              アップロードされた動画の数：
              {channel_data[2].items[0].statistics.videoCount}
            </li>
          </ul>
        )}
      </main>

      <footer></footer>
    </div>
  );
};

export default Index;
